<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Activity">

	<resultMap id="MusicLikeResult" type="MusicLike">
		<result property="music_like_sq" column="music_like_sq"/>
		<result property="target_sq" column="target_sq"/>
		<result property="member_sq" column="member_sq"/>
		<result property="music_like_type" column="music_like_type"/>
	</resultMap>


	<!--JAN 1. 좋아요 눌렀을때 실행되는 메소드 -->
	<insert id="like">
		INSERT INTO music_like(
			music_like_sq,member_sq,target_sq,music_like_type
		) VALUES (
			music_like_sq.NEXTVAL,#{target_sq}, #{member_sq},#{music_like_type}
		)
	</insert>
	
	<!--JAN 좋아요 목록 -->
	<select id="likeList" resultType="MusicLike">
		
			
			
	
	</select>
	
	<!--JAN 좋아요 동일 시퀀스 레코드체크 -->
	<select id="likeCount" resultType="int">
		SELECT COUNT(*)
		FROM music_like
		WHERE member_sq = #{member_sq}
		AND target_sq = #{target_sq}
	</select>
	
	<!--JAN unlike -->
	<delete id="likeCancel">
		DELETE FROM music_like
		WHERE music_like_sq = #{music_like_sq}
	
	</delete>
	
	<!--JAN  -->
	<update id="like_check" parameterType="HashMap">
		UPDATE music_like
		SET music_like_sq = music_like_sq + 1
		WHERE member_sq=#{member_sq} AND target_sq=#{target_sq}
	</update>
	<!--JAN  -->
	<update id="like_check_cancel" parameterType="HashMap">
		UPDATE music_like
		SET music_like_sq = 0
		WHERE member_sq=#{member_sq} AND target_sq=#{target_sq}
	</update>
	
	<!-- JAN : 0612 LIKE 누른 목록 확인-->
	<select id="selectAllLikeList" resultType="AllLikeList" parameterType="int">
		select l.music_like_sq,l.target_sq, l.music_like_type, l.member_sq
		      , a.album_nm,  a.img_path, m.nick, count(l.target_sq) AlbumLikeCount
		       , 1 music_sq, 'm' music_nm, 1 music_like, a.album_sq
		from music_like l, album a, member m
		where l.member_sq = #{id} and l.music_like_type= 'Album'
		and l.target_sq = a.album_sq
		and m.member_sq = a.member_sq
		group by l.music_like_sq,l.target_sq, l.music_like_type, l.member_sq
		      , a.album_nm,  a.img_path, m.nick, a.album_sq
		
		union all
		
		select l.music_like_sq,l.target_sq, l.music_like_type, l.member_sq
		        ,'a' album_nm, 'a' img_path, b.nick,1 AlbumLikeCount
		        ,m.music_sq, m.music_nm, m.music_like, 1 album_sq
		from music_like l, music m, member b, album a
		where l.member_sq = #{id} and l.music_like_type='Music'
		and l.target_sq = m.music_sq
		and b.member_sq = a.member_sq
		and a.album_sq = m.album_sq
	</select>



	<!-- PHmaruho -->
	<select id="selectAlbumType" resultType="Code">
		SELECT *
		FROM code
		WHERE CODE_CATEGORY = 'AT'
	</select>
	
	<select id="selectMusicTag" resultType="Tag">
		select *
		from tag
		start with TAG_CATEGORY is null
		CONNECT BY PRIOR TAG_CD = TAG_CATEGORY
	</select>
	
	<!-- 최우일 -->
	<select id="selectMusicDetail" parameterType="int" resultType="hashMap">
		select m.*, a.*, a.music_sq album_music_sq from music m, album a where m.music_sq = #{sq} and m.album_sq = a.album_sq
	</select>
	
	<!-- 최우일 -->
	<select id="selectMusicArtists" parameterType="int" resultType="Member">
		select m.* from artist a, member m where a.music_sq = #{sq} and a.member_sq = m.member_sq
	</select>
</mapper>
