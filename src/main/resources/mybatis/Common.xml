<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Common">
	<resultMap type="Album" id="AlbumResult">
		<result property="album_sq" column="album_sq"/>
		<result property="album_nm" column="album_nm"/>
		<result property="music_sq" column="music_sq"/>
		<result property="member_sq" column="member_sq"/>
		<result property="album_comment" column="album_comment"/>
		<result property="release_dt" column="release_dt"/>
		<result property="img_path" column="img_path"/>
		<result property="open_yn" column="open_yn"/>
		<result property="album_type" column="album_type"/>
	</resultMap>
	
	<!-- 최우일 -->
	<resultMap id="Playlist" type="Music">
		<result property="list_sq" column="list_sq"/>
		<result property="album_sq" column="album_sq"/>
		<result property="music_sq" column="music_sq"/>
		<result property="music_nm" column="music_nm"/>
		<result property="play_time" column="play_time"/>
		<result property="list_no" column="list_no"/>
		
		<collection property="artistList" javaType="java.util.ArrayList" resultMap="playlistArtistResult"/>
	</resultMap>
	
	<!-- 최우일 -->
	<resultMap id="playlistArtistResult" type="Member">
		<id property="member_sq" column="member_sq"/>
		<result property="nick" column="nick"/>
	</resultMap>
	
	<!-- JAN -->
	<select id="mainList" resultType="SearchList">
	select * 
	FROM (select a.album_sq,a.album_nm,a.img_path
		,m.nick,m.member_sq
    FROM album a, member m
    WHERE a.member_sq = m.member_sq and a.open_yn='Y') am
    </select>
    
	  <!-- album_sq AS albumSq,
		album_nm AS albumMm,
		music_sq AS musicSq,
		member_sq AS memberSq,
		album_comment AS albumComment,
		release_dt AS releaseDt,
		img_path AS imgPath,
		open_yn AS openYn,
		album_type AS albumType
	 -->
	 <!-- JAN -->
	<select id="selectAlbumArriveList"  parameterType="int" resultType="MainList">
 	<![CDATA[ 
	select rownum as rn, am.* from
	(select a.album_sq,a.album_nm,a.img_path
		,m.music_sq,m.music_nm,m.music_like
	from album a, music m
	where a.album_sq=m.album_sq and m.open_yn='Y'
	order by a.release_dt) am 
	where rownum>#{startNum} and rownum<=#{startNum}+10
	]]>
	</select>
	
	
	<!--JAN  -->
	<select id="total" resultType="int">
		select count(*) from Album
	</select>





	<!-- JSY -->
<!--<select id="selectAlbumMainListLike" parameterType="int" resultType="MainList"> -->
	<select id="mainListLike" parameterType="int" resultType="MainList">
	<!-- select rownum as rn, am.* from
	(select a.album_sq,a.album_nm,a.img_path
		,m.music_sq,m.music_nm,m.music_like
	from album a, music m
	where a.album_sq=m.album_sq and m.open_yn='Y') am 
	where rownum>#{startNum} and rownum<=#{startNum}+5
	order by music_like -->
	<![CDATA[
	select rownum as rn, am.* from
	(select a.album_sq,a.album_nm,a.img_path
      ,m.nick, m.member_sq
      , ml.music_like_type,count(distinct ml.target_sq) as album_like
	FROM album a, member m, music_like ml 
	WHERE a.member_sq=m.member_sq 
	AND a.album_sq=ml.target_sq
	GROUP BY a.album_sq, a.album_nm, a.img_path
        , m.nick, m.member_sq, ml.music_like_type) am 
	where rownum>#{startNum} and rownum<=#{startNum}+10
	]]>
	</select>
 <!--<select id="selectAlbumMainListNew" parameterType="int" resultType="MainList">-->
 <select id="mainListNew"  parameterType="int" resultType="MainList">	
 	<![CDATA[ 
	select rownum as rn, am.* from
	(select a.album_sq,a.album_nm,a.img_path
		,b.nick, m.music_sq,m.music_nm
	from album a, music m, member b 
	where a.album_sq=m.album_sq and m.open_yn='Y'
	order by a.release_dt) am
	where rownum>#{startNum} and rownum<=#{startNum}+10
	]]>
	</select>
	
	<!-- 최우일 -->
	<select id="selectPlaylistFoot" parameterType="int" resultMap="Playlist">
		select p.list_sq, musics.*, m.nick, p.list_no
		from (
			select m.album_sq, m.music_sq, m.music_nm, m.play_time, artist.member_sq 
		  	from album a, music m, artist
		  	where a.open_yn = 'Y' and m.open_yn = 'Y' and a.album_sq = m.album_sq and m.music_sq = artist.music_sq) musics,
		playlist p, member m
		where p.member_sq = #{sessionSq} and musics.music_sq = p.music_sq and musics.member_sq = m.member_sq
	</select>
</mapper>
